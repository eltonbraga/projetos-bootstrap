file://///wsl.localhost/Ubuntu/home/eltonbraga/git/projetos-bootstrap/receitas/index.html


Guia completo de flex-box: https://css-tricks.com/snippets/css/a-guide-to-flexbox/#aa-background
Jogo: https://flexboxfroggy.com (brincar com posições do flex) - nivel 21

display: flex;

+

    justify-content:
    +
        flex-start: Itens se alinham à esquerda do container.
        flex-end: Itens se alinham à direita do container.
        center: Itens se alinham no centro do container.
        space-between: Itens se alinham com distância igual entre eles.
        space-around: Itens se alinham com distância igual em torno deles.

    +
    align-items
        flex-start: Itens se alinham na parte de cima do container.
        flex-end: Itens se alinham na parte de baixo do container.
        center: Itens se alinham no centro vertical do container.
        baseline: Items se alinham na linha da base do container.
        stretch: Itens se esticam para preencher o container.
    +
     flex-direction
        row: Itens são posicionados na mesma direção do texto.
        row-reverse: Itens são posicionados na direção oposta à do texto.
        column: Itens são posicionados de cima para baixo.
        column-reverse: Itens são posicionados de baixo para cima.
    +
    order
        Às vezes, reverter a ordem de uma coluna ou de um container não é suficiente. 
        Nesses casos, podemos aplicar a propriedade order para itens individuais. 
            Por padrão, itens tem um valor de 0, mas nós podemos usar essa propriedade
             para alterar para um valor inteiro positivo ou negativo.
    +
    align-self 
        parecido com align-items, mas aplicado a um item
        flex-start: Itens se alinham na parte de cima do container.
        flex-end: Itens se alinham na parte de baixo do container.
        center: Itens se alinham no centro vertical do container.
        baseline: Items se alinham na linha da base do container.
        stretch: Itens se esticam para preencher o container.
    +
     flex-wrap
        nowrap: Todos os itens são apertados em uma única linha.
        wrap: Itens se separam em linhas adicionais.
        wrap-reverse: Itens se separam em linhas adicionais em reverso.
    +
    align-content:  
        align-content determina o espaçamento entre linhas, enquanto 
        align-items determina como as linhas como um todo são alinhadas 
        dentro do container. Quando há só uma linha, align-content 
        não tem nenhum efeito.

        flex-start: Linhas são agrupadas no topo do container.
        flex-end: Linhas são agrupadas no fundo do container.
        center:Linhas são agrupadas no centro vertical do container.
        space-between: Linhas são posicionadas com espaço igual entre elas.
        space-around: Linhas são posicionadas com espaço igual em torno delas.
        stretch: Linhas se esticam para preencher o container.


Obs.: As duas propriedades flex-direction e flex-wrap são usadas tão frequentemente juntas.
Quando ocorre abreviamos flex-flow. Essa propriedade aceita o valor das duas propriedades separados por um espaço.



-----

body {
  font-size: 14px;
}

div {
  font-size: 2em;
}

<body>
  <div>texto</div>
</body>

Neste caso a font dentro da div terá o valor de 2 x 14px.

<body>
    <div> //font-size: 2em x 14px = 28px
        <div> //font-size: 2em x 28px = 56px
            <div> //font-size: 2em x 56px = 112px
                texto
            </div>
        </div>
    </div>
</body>

Note que nesse caso cada div filha tem o dobro da div pai, tornando o texto bem grande no final.

Se não quisermos o comportamento de dobrar podemos usar ao invés de "em" (element pai como referência) podemos usar
o "rem" (root como referência), dessa forma o texto terá o dobro (28px). Se não colocarmos o font-size por padrão 
css utiliza 16 px como (1em ou 1rem).

Já o Bootstrap, as classes de margin e padding utilizam valores de 0 a 5 baseados em rem, 
de 0.25rem até 3rem. ou seja, como não estipulamos nada em nosso projeto, a medida-base de 
cada rem é a padrão de 16px.

Texto (texto no bootstrap 4)
https://getbootstrap.com/docs/4.3/utilities/text/

Cores (texto no bootstrap 4)
https://getbootstrap.com/docs/4.3/utilities/colors/

Espaçamento (texto no bootstrap 4)
https://getbootstrap.com/docs/4.3/utilities/spacing/

Cards:
https://getbootstrap.com/docs/4.3/components/card/

Colors:
https://getbootstrap.com/docs/4.3/utilities/colors/#background-color

Grids:
https://getbootstrap.com/docs/4.3/layout/grid/

HTML semantico
https://www.w3schools.com/html/html5_semantic_elements.asp


Scripts para facilitar reload da pagina
  <!-- Begin: helping debug (página é recarregada de 3 em 3 segundos) -->
  <script>
    setTimeout(function () {
      window.location.reload(1);
    }, 3000);
  </script>
  <!-- End: helping debug (página é recarregada de 3 em 3 segundos) -->